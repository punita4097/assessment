#pragma checksum "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\Pages\Questtion1.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e31f7f96013bad25d6db7c868a7ae40ef7ed02b1"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorIntroduction1.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using BlazorIntroduction1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Punita Yadav\source\repos\BlazorIntroduction1\BlazorIntroduction1\_Imports.razor"
using BlazorIntroduction1.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Question")]
    public partial class Questtion1 : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1 class=\"text-danger\">Question1</h1>\r\n");
            __builder.AddMarkupContent(1, "<h2 class=\"text-danger\">Difference between the Blazor client-side and server-side \r\n    and also explain web assembly and Signal R connection. </h2>\r\n");
            __builder.AddMarkupContent(2, @"<div>
    <div>
        <h3 class=""text-primary"">Blazor Server Side:</h3>
        <p1>
            On the server, Blazor implements a SignalR hub communicating with the client via web sockets.<br>
            In the server-side hosting model, Blazor is executed on the server from within an ASP.NET Core app.<br>
            UI updates, event handling, and JavaScript calls are handled over the SignalR connection.<br>
            The app download size is smaller and the initial app load is faster.<br>
            It will also support existing .NET tooling like debugging the application and JIT compilation.

        </p1>
    </div>

    <div>
        <h3 class=""text-primary"">Blazor Client Side:</h3>
        <p1>
            Blazor WebAssembly will allow running a web application within the browser instead of executing
            the logic on the server<br>
            There's no .NET server-side dependency. The app is fully functioning after it's downloaded to the client.<br>
            An ASP.NET Core web server isn't required to host the app<br>
            Download size is larger, and apps take longer to load.<br>
            It will not also support existing .NET tooling like debugging the application and JIT compilation.<br>


        </p1>
    </div>

</div>
<hr>
");
            __builder.AddMarkupContent(3, @"<div>
    <h2 class=""text-danger"">Web Assembly</h2>
    <p1>

        Blazor WebAssembly will allow running a web application within the browser <br>
        instead of executing the logic on the server.

        <br>Blazor WebAssembly is a single-page app framework for building interactive client-side web apps with .NET.<br>
        Blazor WebAssembly uses open web standards without plugins or code<br>
        transpilation and works in all modern web browsers, including mobile browsers.<br>
        WebAssembly is a compact bytecode format optimized for fast download and maximum execution speed.<br>






    </p1>
</div>
<hr>
");
            __builder.AddMarkupContent(4, @"<div>
    <h3 class=""text-danger"">SignalRConnection</h3>
    <p1>
        On the server, Blazor implements a SignalR hub communicating with the client via web sockets.<br>
        In the server-side hosting model, Blazor is executed on the server from within an ASP.NET Core app.<br>
        UI updates, event handling, and JavaScript calls are handled over the SignalR connection.<br>
        To create a Blazor app using the Blazor Server hosting model, use the ASP.NET Core Blazor Server
        App template.
        The ASP.NET Core app hosts the Blazor Server app and creates the SignalR endpoint where clients connect.
    </p1>
</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager _navigation { get; set; }
    }
}
#pragma warning restore 1591

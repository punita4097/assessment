@page "/DeleteStudent/{CurrentID}"
@using BlazorAssignment1.Data.Services
@using BlazorAssignment1.Data.Models
@inject StudentServices studentservice
@inject NavigationManager navigationManager
<h2>Delete Student</h2>
<hr />
<h3> Are you sure you want to Delete?</h3>
<div class="row">
    <div class="col-md-10">
        <div class="form-group">
            <label>Student Id:</label>
            <label>@objStudent.StudentId</label>
        </div>
        <div class="form-group">
            <label>First Name</label>
            <label>@objStudent.FirstName</label>
        </div>
        <div class="form-group">
            <label>Last Name</label>
            <label>@objStudent.LastName</label>
        </div>
        <div class="form-group">
            <label>Address</label>
            <label>@objStudent.Address</label>
        </div>
        <div class="form-group">
            <label>City</label>
            <label>@objStudent.city</label>
        </div>
        <div class="form-group">
            <label>Age</label>
            <label>@objStudent.Age</label>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <div class="form-group">
            <input type="button" class="btn btn-danger" @onclick="@DeleteStudentInfo" value="Delete" />
            <input type="button" class="btn btn-primary" @onclick="@Cancel" value="cancel" />

        </div>
    </div>
</div>

@code {

[Parameter]
public string CurrentID { get; set; }
StudentInfo objStudent = new StudentInfo();



protected override async Task OnInitializedAsync()
{
    objStudent = await Task.Run(() => studentservice.GetStudentById(Convert.ToInt32(CurrentID)));
}

protected void DeleteStudentInfo()
{
    studentservice.DeleteStudent(objStudent);
    navigationManager.NavigateTo("Student");
}
void Cancel()
{
    navigationManager.NavigateTo("Student");
}

}
